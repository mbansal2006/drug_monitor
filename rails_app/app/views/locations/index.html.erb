<div class="container mx-auto px-4">
  <h1 class="text-3xl font-bold text-[#0052CC] mb-6">Location Explorer</h1>

  <div class="lg:flex lg:space-x-6">
    <div class="lg:w-1/4 lg:shrink-0 mb-6">
      <%= form_with url: locations_path, method: :get, local: true do %>
        <div class="bg-white p-4 rounded shadow space-y-4">
          <input type="text" name="q" value="<%= params[:q] %>" placeholder="Search name or address" class="w-full border-gray-300 rounded p-2" />
          <select name="country" class="w-full border-gray-300 rounded p-2">
            <option value="">All Countries</option>
            <% @countries&.each do |code, name| %>
              <option value="<%= code %>" <%= 'selected' if params[:country] == code %>><%= name %></option>
            <% end %>
          </select>
          <select name="state_or_region" class="w-full border-gray-300 rounded p-2">
            <option value="">All States/Regions</option>
            <% @states&.each do |st| %>
              <option value="<%= st %>" <%= 'selected' if params[:state_or_region] == st %>><%= st %></option>
            <% end %>
          </select>
          <select name="risk_bucket" class="w-full border-gray-300 rounded p-2">
            <option value="">All Risk Levels</option>
            <option value="low" <%= 'selected' if params[:risk_bucket] == 'low' %>>Low (0-33)</option>
            <option value="medium" <%= 'selected' if params[:risk_bucket] == 'medium' %>>Medium (34-66)</option>
            <option value="high" <%= 'selected' if params[:risk_bucket] == 'high' %>>High (67+)</option>
          </select>
          <div>
            <button type="submit" class="bg-[#0052CC] text-white w-full py-2 rounded">Apply Filters</button>
          </div>
        </div>
      <% end %>
    </div>
    <div class="lg:flex-1">
      <div id="map" class="h-80 lg:h-96 rounded shadow"></div>
    </div>
  </div>

  <table id="locations-table" class="min-w-full divide-y divide-gray-200 mt-6 bg-white rounded shadow">
    <thead class="bg-[#0052CC] text-white">
      <tr>
        <th class="p-2 cursor-pointer" data-sort>Address</th>
        <th class="p-2 cursor-pointer" data-sort>Country</th>
        <th class="p-2 cursor-pointer" data-sort>State/Region</th>
        <th class="p-2 cursor-pointer" data-sort>Risk Score</th>
      </tr>
    </thead>
    <tbody>
      <% @locations.each do |loc| %>
        <% risk_class = if loc.risk_score.to_i >= 67
                          'bg-red-50'
                        elsif loc.risk_score.to_i >= 34
                          'bg-yellow-50'
                        else
                          ''
                        end %>
        <tr class="border-b hover:bg-gray-50 <%= risk_class %>">
          <td class="p-2"><%= loc.address %></td>
          <td class="p-2"><%= loc.country %></td>
          <td class="p-2"><%= loc.state_or_region %></td>
          <td class="p-2"><%= loc.risk_score %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    mapboxgl.accessToken = 'pk.eyJ1IjoibWJhbnNhbDA2IiwiYSI6ImNtOHRwNDB0dzA2bWYybHB0M3Q5NmltMnQifQ.SoIE1BpShnshj_AC7KI_uA';
    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/light-v11',
      center: [0, 20],
      zoom: 1.2
    });

    const locations = <%= raw @locations_json %>;
    locations.forEach(loc => {
      if (!loc.latitude || !loc.longitude) return;
      const color = loc.risk_score >= 67 ? '#dc2626' : (loc.risk_score >= 34 ? '#facc15' : '#16a34a');
      const el = document.createElement('div');
      el.className = 'w-3 h-3 rounded-full';
      el.style.backgroundColor = color;
      new mapboxgl.Marker(el)
        .setLngLat([loc.longitude, loc.latitude])
        .setPopup(new mapboxgl.Popup({offset:25}).setHTML(`<div class='text-sm p-1'><strong>${loc.address}</strong><br/>Risk: ${loc.risk_score}</div>`))
        .addTo(map);
    });

    document.querySelectorAll('#locations-table th[data-sort]').forEach((th, index) => {
      th.addEventListener('click', () => {
        const tbody = document.querySelector('#locations-table tbody');
        const rows = Array.from(tbody.querySelectorAll('tr'));
        const ascending = th.classList.toggle('asc');
        rows.sort((a,b) => {
          const valA = a.children[index].innerText.trim();
          const valB = b.children[index].innerText.trim();
          const numA = parseFloat(valA);
          const numB = parseFloat(valB);
          let cmp = 0;
          if (!isNaN(numA) && !isNaN(numB)) {
            cmp = numA - numB;
          } else {
            cmp = valA.localeCompare(valB);
          }
          return ascending ? cmp : -cmp;
        });
        rows.forEach(r => tbody.appendChild(r));
      });
    });
  });
</script>
